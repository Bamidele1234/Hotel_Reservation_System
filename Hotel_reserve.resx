<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAABAlJREFUeF7tm8/LVGUUx9VEMhUxEqGFmxAXmtsMMlpEZAt3bqR0E0QZ9AtKXBVu
        hFoJtkojDQIX/gPiTow2Vmq/JHEjtGkVWkhFfb4jBw93zr33mWeO4zuX+cAH571znu+ced57n3vvzOuy
        Hh7H/fjBQHwfX8KHsJfX8Bb+N0C/w83Yym78F6PBQ/FbbN0TzmM0aJ69hMfxL7dNh8MYq/Fv9IPnXe3N
        j6E4hrb9kDY0eRr94CH4Mxofom3X4zHeRD94CH6JRu8EfI5+8BB8B43eCbiMfvAQfBaNzgl4BIe4AK5D
        o3MCdqIfXKNOM7cb2x6kP6GncwIOoh88if/gu6jT6ArUOVYvHtXOUr8Ais4JmGYBfA+brMeLGNXPyrfR
        0zkB36MfXOoZXI6Gf7wBf8FonDyLz+MTqGuQkxjV1boLPa0TUHsFqN18LRoH8BvcOPrpLlvxd/Tj7qDu
        NCO+Rl9bqxZA35tonYCaBfBP3IHGdtQ2Padd/2E0nkG7Dv8DX8CIlZi1dvyATVonoGYB1D22oVPoFfTP
        awHyh8NT+Bk+OfrpHq/iVTyFfs3Qb1DbZM3dqcY1aZ2AmmNvDxonMKo5gm1ocj7CaJz8Ag29maimy7ew
        SesE1CyA2lVfRn+HFfkJrkKPDo/TGNWb/jfYVxupw65JOAGzuAX+EXVK2ouH8QZGdV7t9nrjctJDQNcl
        a7BJOAFDvAXWehQRTsA0V4BLVb9+eMIJ0DHqBw/B1zEinICP0Q+ed7VetH3qG07APvQB8+5X2EY4AVot
        f0MfMq/qfWzCNsIJEC+irs992Lx5E7dhF60TIJ7Da+hD50HdY3yKj2Ifr6CN00XcGPowQ7eQ+mqs+d3a
        UvMN1J7rP/LqQ+9Pb1zq8YIFCxYsqEWrqE4r0QqdrV4nY9W2nlPy9KGmPx/fb9X0tPiep87zV1WzcOzK
        rYLOK8FJ8WEX8GiBVi+j55sq1+qX9ASUhlm9LCG1YUjNqwmzellCasOQmlcTZvWyhNSGITWvJszqZQmp
        DUNqXk2Y1csSUhuG1LyaMKuXJaQ2DKl5NWFWL0tIbRhS82rCrF6WkNowpObVhFm9LCG1YUjNqwmzellC
        asOQmlcTZvWyhNSGITWvJszqZQmpDUNqXk2Y1csSUhuG1LyaMKuXJaQ2DKl5NWFWL0tIbRhS82rCrF6W
        kNowpObVhFm9LCG1YUjNqwmzellCasOQmlcTZvWyhNSGITWvJszqZQmpDUNqXk2Y1csSUhuG1LyaMKuX
        JaQ2DGN503y7cw4nbc7qZQm+Yb1e1MckjvWc9e3OLCYg21HP+u1HT05q+OcmAddR9b+Ofuonq7/IUc86
        BPQg+lam1En+3GQL6v/x6d8SMvqLJHPZiv8B9gaaxkoMOZwAAAAASUVORK5CYII=
</value>
  </data>
</root>